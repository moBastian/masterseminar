<head>
  <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
</head>
<!--Laden der Testseiten-->
<div>
  <%= render 'results/tests/studentEnv'%>
</div>

<script>

    //variable for testsequence
    var currentResult ="";
    //data for timeout
    var timeoutId = -1;
    var currentTimes = "";
    var stopwatch = null;
    var timedout = false;
    var actualAnswers = "";
    var workTime = -1;



    //Zeit, welche zum beenden des Testablaufes zur Verfügung steht, wenn eingestellt
    <% if !@measurement.assessment.test.time.nil? %>
      workTime = <%=@measurement.assessment.test.time * 1000 %> + 500;
    <% end %>
    //Timeout zurücksetzen
    if (timeoutId != -1) {
        window.clearTimeout(timeoutId);
    }
    //Timeout setzen
    if(workTime!=-1) {
        timeoutId = window.setTimeout(timedOut, workTime);
        stopwatch = new Date();
    }


    //Views for displayed Items
    var itemTextHash = {
    <% @measurement.assessment.test.items.each do |i| %>
    <%= i.id%>: "<%=i.itemtext%>",
    <% end %>
    };

    //Views for displayed Items
    var itemView = {
    <% @measurement.assessment.test.items.each do |i| %>
    <%= i.id%>: "<%= escape_javascript render(i.itemview, item: i)%>",
    <% end %>
    };
    //last result of testkind
    var lastResults = {
    <% @measurement.results.each do |r| %>
    <%= r.id%>: <%= r.getPriorResult%>,
    <% end %>
    };


  /*Changes current content of Html-elements based on currentItemIndex*/
  function nextItem() {
      currentItemIndex++;
      if (currentItemIndex+1 < studentData[currentStudent].length) {
          //Beim timeout test beenden
          if(timedout){
              stopTest()
          }
          else{
              $('#testEnviroment').html(itemView[studentData[currentStudent][currentItemIndex]]);
          }
      }
      else
          //benden eines Testablaufes
          stopTest();
  }

    /*Set flag for time-out, no abrupt end*/
    function timedOut() {
        timedout =true;
    }


  /*Stop test, when all items are asked*/
  function stopTest() {
      $('#testEnviroment').html(itemView[studentData[currentStudent][studentData[currentStudent].length - 1]]);
      if (timeoutId != -1) {
          window.clearTimeout(timeoutId);
          timeoutId = -1;
      }
      var dict = {};
      dict["authenticty_token"] = "<%= Rails.configuration.secret_token%>";
      //send data
      dict["results"] = currentStudent + ",times,answers#" + currentResult.substr(0, currentResult.length-1) + "#" + currentTimes.substr(0, currentTimes.length-1)+ "#"+ actualAnswers.substr(0, actualAnswers.length-1).replace(/#/g, "~"); //replace all "#" to keep sure the parsing still works.
      $.ajax({
          type: "PUT",
          url: "<%= user_group_assessment_measurement_results_path(@student.group.user, @student.group, @measurement.assessment, @measurement)%>",
          data: dict,
      });
  }

    nextItem()
    $('#myProgress').hide();
    $('#myBar').hide();


</script>

